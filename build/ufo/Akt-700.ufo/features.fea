# Prefix: Languagesystems
# automatic
languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn AZE;
languagesystem latn CRT;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn MAH;
languagesystem latn CAT;
languagesystem latn NLD;

languagesystem cyrl dflt;
languagesystem cyrl BGR;
languagesystem cyrl SRB;


feature aalt {
# automatic
feature locl;
feature subs;
feature sinf;
feature sups;
feature numr;
feature dnom;
feature frac;
feature ordn;
feature lnum;
feature onum;
feature case;
feature ss01;
feature ss02;
feature cv01;
feature cv02;

} aalt;

feature ccmp {
lookup ccmp_DFLT_1 {
 @CombiningTopAccents = [acutecomb gravecomb circumflexcomb tildecomb tildecomb.narrow macroncomb brevecomb brevecomb.narrow caroncomb caroncomb.narrow dotaccentcomb dieresiscomb ringcomb hungarumlautcomb ogonekcomb dotbelowcomb strokeshortcomb commaturnedabovecomb asteriskabovecomb];
  	lookupflag UseMarkFilteringSet @CombiningTopAccents;
  	# soft-dotted bases (latin + cyrillic + derived i-forms)
  	sub i' @CombiningTopAccents by idotless;
   sub j' @CombiningTopAccents by jdotless;
   sub je-cy' @CombiningTopAccents by jdotless;
    	sub i-cy' @CombiningTopAccents by idotless;
    	sub yi-cy' @CombiningTopAccents by idotless;
    	# derived precomposed forms already dotless in outlines
    	# (iogonek/idotbelow are composed from idotless, keep as-is)
 } ccmp_DFLT_1;
 
 lookup ccmp_latn_1 {
 	lookupflag 0;
 	# Decompose soft-dotted precomposed bases to dotless + mark
 	sub iogonek by idotless ogonekcomb;
 	sub idotbelow by idotless dotbelowcomb;
 	# NOTE: if we need Lithuanian l+tilde behavior, implement via locl not via ccmp synthetic glyphs
 	sub fi by f i;
 	sub fl by f l;
 	sub napostrophe by apostrophemod n;
 } ccmp_latn_1;

script DFLT;
language dflt;
lookup ccmp_DFLT_1;

script latn;
lookup ccmp_DFLT_1;
lookup ccmp_latn_1;

script cyrl;
 lookup ccmp_DFLT_1;
 # ensure soft-dotted decomposition also for Cyrillic i-forms
 lookup ccmp_latn_1;

} ccmp;

feature locl {
# automatic
script latn;
language AZE;
lookup locl_latn_0 {
	sub i by idotaccent;
} locl_latn_0;
language CRT;
lookup locl_latn_0;
language KAZ;
lookup locl_latn_0;
language TAT;
lookup locl_latn_0;
language TRK;
lookup locl_latn_0;

script latn;
language ROM;
lookup locl_latn_1 {
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
} locl_latn_1;
language MOL;
lookup locl_latn_1;

script latn;
language MAH;
lookup locl_latn_2 {
	sub Lcommaaccent by Lcommaaccent.loclMAH;
	sub Ncommaaccent by Ncommaaccent.loclMAH;
	sub ncommaaccent by ncommaaccent.loclMAH;
	sub commaaccentcomb by commaaccentcomb.loclMAH;
} locl_latn_2;

script latn;
language CAT;
lookup locl_latn_3 {
	sub  l' periodcentered' l by ldot;
	sub  L' periodcentered' L by Ldot;
} locl_latn_3;

script latn;
language NLD;
lookup locl_latn_4 {
	sub iacute j' by jacute;
	sub Iacute J' by Jacute;
} locl_latn_4;

script cyrl;
language BGR;
lookup locl_cyrl_0 {
	sub De-cy by De-cy.loclBGR;
	sub El-cy by El-cy.loclBGR;
	sub Ef-cy by Ef-cy.loclBGR;
	sub ve-cy by ve-cy.loclBGR;
	sub ge-cy by ge-cy.loclBGR;
	sub de-cy by de-cy.loclBGR;
	sub zhe-cy by zhe-cy.loclBGR;
	sub ze-cy by ze-cy.loclBGR;
	sub ii-cy by ii-cy.loclBGR;
	sub iishort-cy by iishort-cy.loclBGR;
	sub ka-cy by ka-cy.loclBGR;
	sub el-cy by el-cy.loclBGR;
	sub pe-cy by pe-cy.loclBGR;
	sub te-cy by te-cy.loclBGR;
	sub tse-cy by tse-cy.loclBGR;
	sub sha-cy by sha-cy.loclBGR;
	sub shcha-cy by shcha-cy.loclBGR;
	sub softsign-cy by softsign-cy.loclBGR;
	sub yeru-cy by yeru-cy.loclBGR;
	sub hardsign-cy by hardsign-cy.loclBGR;
	sub yu-cy by yu-cy.loclBGR;
} locl_cyrl_0;

script cyrl;
language SRB;
lookup locl_cyrl_1 {
	sub be-cy by be-cy.loclSRB;
} locl_cyrl_1;

} locl;

feature subs {
# automatic
sub a by ainferior;
sub e by einferior;
sub o by oinferior;
sub schwa by schwainferior;
sub x by xinferior;
sub h by hinferior;
sub k by kinferior;
sub l by linferior;
sub m by minferior;
sub n by ninferior;
sub p by pinferior;
sub s by sinferior;
sub t by tinferior;
sub f by finferior;
sub g by ginferior;
sub i by iinferior;
sub j by jinferior;
sub r by rinferior;
sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
sub parenleft by parenleftinferior;
sub parenright by parenrightinferior;
sub equal by equalinferior;
sub minus by minusinferior;
sub plus by plusinferior;

} subs;

feature sinf {
# automatic
sub a by ainferior;
sub b by binferior;
sub c by cinferior;
sub d by dinferior;
sub e by einferior;
sub o by oinferior;
sub schwa by schwainferior;
sub period by periodinferior;
sub comma by commainferior;
sub x by xinferior;
sub h by hinferior;
sub k by kinferior;
sub l by linferior;
sub m by minferior;
sub n by ninferior;
sub p by pinferior;
sub q by qinferior;
sub s by sinferior;
sub t by tinferior;
sub f by finferior;
sub g by ginferior;
sub i by iinferior;
sub j by jinferior;
sub r by rinferior;
sub u by uinferior;
sub v by vinferior;
sub w by winferior;
sub y by yinferior;
sub z by zinferior;
sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
sub parenleft by parenleftinferior;
sub parenright by parenrightinferior;
sub equal by equalinferior;
sub minus by minusinferior;
sub plus by plusinferior;

} sinf;

feature sups {
# automatic
sub zero by zerosuperior;
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
sub five by fivesuperior;
sub six by sixsuperior;
sub seven by sevensuperior;
sub eight by eightsuperior;
sub nine by ninesuperior;
sub parenleft by parenleftsuperior;
sub parenright by parenrightsuperior;
sub equal by equalsuperior;
sub minus by minussuperior;
sub plus by plussuperior;
sub c by csuperior;
sub f by fsuperior;
sub g by gsuperior;
sub h by hsuperior;
sub j by jsuperior;
sub k by ksuperior;
sub p by psuperior;
sub q by qsuperior;
sub u by usuperior;
sub v by vsuperior;
sub w by wsuperior;
sub x by xsuperior;
sub y by ysuperior;
sub z by zsuperior;
sub period by periodsuperior;
sub comma by commasuperior;
sub schwa by uni0259.superior;

} sups;

feature numr {
# automatic
sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;

} numr;

feature dnom {
# automatic
sub zero by zero.dnom;
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;

} dnom;

feature frac {
# automatic
lookup FRAC {
	sub slash by fraction;
} FRAC;
lookup UP {
	sub [zero one two three four five six seven eight nine] by [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
} UP;
lookup DOWN {
	sub fraction [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
	sub [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom] [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
} DOWN;

} frac;

feature ordn {
# automatic
sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
sub N o period by numero;

} ordn;

feature lnum {
# automatic
sub zero.osf by zero;
sub one.osf by one;
sub two.osf by two;
sub three.osf by three;
sub four.osf by four;
sub five.osf by five;
sub six.osf by six;
sub seven.osf by seven;
sub eight.osf by eight;
sub nine.osf by nine;

} lnum;

feature onum {
# automatic
sub zero by zero.osf;
sub one by one.osf;
sub two by two.osf;
sub three by three.osf;
sub four by four.osf;
sub five by five.osf;
sub six by six.osf;
sub seven by seven.osf;
sub eight by eight.osf;
sub nine by nine.osf;

} onum;

feature case {
# automatic
sub colon by colon.case;
sub semicolon by semicolon.case;
sub periodcentered by periodcentered.case;
sub bullet by bullet.case;
sub hyphenationpoint by hyphenationpoint.case;
sub hyphenbullet by hyphenbullet.case;
sub slash by slash.case;
sub backslash by backslash.case;
sub triangularbullet by triangularbullet.case;
sub hyphen by hyphen.case;
sub endash by endash.case;
sub emdash by emdash.case;
sub horizontalbar by horizontalbar.case;
sub parenleft by parenleft.case;
sub parenright by parenright.case;
sub braceleft by braceleft.case;
sub braceright by braceright.case;
sub bracketleft by bracketleft.case;
sub bracketright by bracketright.case;
sub angleLeft by angleLeft.case;
sub angleRight by angleRight.case;
sub guillemetleft by guillemetleft.case;
sub guillemetright by guillemetright.case;
sub guilsinglleft by guilsinglleft.case;
sub guilsinglright by guilsinglright.case;
sub zero.osf by zero;
sub one.osf by one;
sub two.osf by two;
sub three.osf by three;
sub four.osf by four;
sub five.osf by five;
sub six.osf by six;
sub seven.osf by seven;
sub eight.osf by eight;
sub nine.osf by nine;

} case;

feature dlig {
# automatic
lookupflag IgnoreMarks;
sub f f j by f_f_j;
sub I J by I_J;
sub f j by f_j;
sub f t by f_t;
sub I J acutecomb by IJacute;
sub i j acutecomb by ijacute;

} dlig;

feature liga {
# automatic
lookupflag IgnoreMarks;
sub f f i by f_f_i;
sub f f l by f_f_l;
sub f f by f_f;
sub f i by fi;
sub f l by fl;

} liga;

feature ss01 {
featureNames {
  name "Oldfashion";
};
# automatic
sub a by a.ss01;
sub aacute by aacute.ss01;
sub abreve by abreve.ss01;
sub acaron by acaron.ss01;
sub acircumflex by acircumflex.ss01;
sub adieresis by adieresis.ss01;
sub adotaccent by adotaccent.ss01;
sub adotbelow by adotbelow.ss01;
sub agrave by agrave.ss01;
sub amacron by amacron.ss01;
sub aogonek by aogonek.ss01;
sub aring by aring.ss01;
sub aringacute by aringacute.ss01;
sub atilde by atilde.ss01;
sub g by g.ss01;
sub gbreve by gbreve.ss01;
sub gcaron by gcaron.ss01;
sub gcircumflex by gcircumflex.ss01;
sub gcommaaccent by gcommaaccent.ss01;
sub gdotaccent by gdotaccent.ss01;
sub gmacron by gmacron.ss01;
sub gstroke by gstroke.ss01;
sub l by l.ss01;
sub lacute by lacute.ss01;
sub lcaron by lcaron.ss01;
sub lcommaaccent by lcommaaccent.ss01;
sub ldot by ldot.ss01;
sub lslash by lslash.ss01;
sub Zhe-cy by Zhe-cy.ss01;
sub Ka-cy by Ka-cy.ss01;
sub Kje-cy by Kje-cy.ss01;
sub Zhedescender-cy by Zhedescender-cy.ss01;
sub Kadescender-cy by Kadescender-cy.ss01;
sub Kaverticalstroke-cy by Kaverticalstroke-cy.ss01;
sub Kastroke-cy by Kastroke-cy.ss01;
  sub Kabashkir-cy by Kabashkir-cy.ss01;
  sub kabashkir-cy by kabashkir-cy.ss01;
sub Zhebreve-cy by Zhebreve-cy.ss01;
sub Kahook-cy by Kahook-cy.ss01;
sub Zhedieresis-cy by Zhedieresis-cy.ss01;
sub a-cy by a-cy.ss01;
sub be-cy by be-cy.ss01;
sub zhe-cy.loclBGR by zhe-cy.loclBGR.ss01;
  sub zhe-cy by zhe-cy.ss01;
sub ka-cy.loclBGR by ka-cy.loclBGR.ss01;
sub ka-cy by ka-cy.ss01;
sub kje-cy by kje-cy.ss01;
sub zhedescender-cy by zhedescender-cy.ss01;
sub kadescender-cy by kadescender-cy.ss01;
sub kaverticalstroke-cy by kaverticalstroke-cy.ss01;
sub kastroke-cy by kastroke-cy.ss01;
sub zhebreve-cy by zhebreve-cy.ss01;
sub kahook-cy by kahook-cy.ss01;
sub abreve-cy by abreve-cy.ss01;
sub adieresis-cy by adieresis-cy.ss01;
sub zhedieresis-cy by zhedieresis-cy.ss01;

} ss01;

feature ss02 {
featureNames {
  name "Futuristic";
};
# automatic
sub K by K.ss02;
sub Kcaron by Kcaron.ss02;
sub Kcommaaccent by Kcommaaccent.ss02;
sub L by L.ss02;
sub Lacute by Lacute.ss02;
sub Lcaron by Lcaron.ss02;
sub Lcommaaccent.loclMAH by Lcommaaccent.loclMAH.ss02;
sub Lcommaaccent by Lcommaaccent.ss02;
sub Ldot by Ldot.ss02;
sub Lslash by Lslash.ss02;
sub a by a.ss02;
sub aacute by aacute.ss02;
sub abreve by abreve.ss02;
sub acaron by acaron.ss02;
sub acircumflex by acircumflex.ss02;
sub adieresis by adieresis.ss02;
sub adotaccent by adotaccent.ss02;
sub adotbelow by adotbelow.ss02;
sub agrave by agrave.ss02;
sub amacron by amacron.ss02;
sub aogonek by aogonek.ss02;
sub aring by aring.ss02;
sub aringacute by aringacute.ss02;
sub atilde by atilde.ss02;
sub g by g.ss02;
sub gbreve by gbreve.ss02;
sub gcaron by gcaron.ss02;
sub gcircumflex by gcircumflex.ss02;
sub gcommaaccent by gcommaaccent.ss02;
sub gdotaccent by gdotaccent.ss02;
sub gmacron by gmacron.ss02;
sub gstroke by gstroke.ss02;
sub j by j.ss02;
sub jdotless by jdotless.ss02;
sub jacute by jacute.ss02;
sub jcircumflex by jcircumflex.ss02;
sub k by k.ss02;
sub kcaron by kcaron.ss02;
sub kcommaaccent by kcommaaccent.ss02;
sub kgreenlandic by kgreenlandic.ss02;
sub r by r.ss02;
sub racute by racute.ss02;
sub rcaron by rcaron.ss02;
sub rcommaaccent by rcommaaccent.ss02;
sub rlongleg by rlongleg.ss02;
sub t by t.ss02;
sub tbar by tbar.ss02;
sub tcaron by tcaron.ss02;
sub tcedilla by tcedilla.ss02;
sub tcommaaccent by tcommaaccent.ss02;
sub y by y.ss02;
sub yacute by yacute.ss02;
sub ycircumflex by ycircumflex.ss02;
sub ydieresis by ydieresis.ss02;
sub ygrave by ygrave.ss02;
sub ymacron by ymacron.ss02;
sub ytilde by ytilde.ss02;
sub Ge-cy by Ge-cy.ss02;
sub Gje-cy by Gje-cy.ss02;
sub Geupturn-cy by Geupturn-cy.ss02;
sub Gedescender-cy by Gedescender-cy.ss02;
sub Gestroke-cy by Gestroke-cy.ss02;
sub Gemiddlehook-cy by Gemiddlehook-cy.ss02;
sub U-cy by U-cy.ss02;
sub Ushort-cy by Ushort-cy.ss02;
sub Umacron-cy by Umacron-cy.ss02;
sub Udieresis-cy by Udieresis-cy.ss02;
sub Uhungarumlaut-cy by Uhungarumlaut-cy.ss02;
sub a-cy by a-cy.ss02;
sub ge-cy by ge-cy.ss02;
sub gje-cy by gje-cy.ss02;
sub geupturn-cy by geupturn-cy.ss02;
sub gedescender-cy by gedescender-cy.ss02;
sub gestroke-cy by gestroke-cy.ss02;
sub gemiddlehook-cy by gemiddlehook-cy.ss02;
sub u-cy by u-cy.ss02;
sub ushort-cy by ushort-cy.ss02;
sub abreve-cy by abreve-cy.ss02;
sub adieresis-cy by adieresis-cy.ss02;
sub umacron-cy by umacron-cy.ss02;
sub udieresis-cy by udieresis-cy.ss02;
sub uhungarumlaut-cy by uhungarumlaut-cy.ss02;

} ss02;

feature mark {
# automatic

} mark;

feature mkmk {
# automatic

} mkmk;

feature cv01 {
# automatic
sub a by a.cv01;
sub a.ss01 by a.ss01.cv01;
sub a.ss02 by a.ss02.cv01;
sub aacute by aacute.cv01;
sub aacute.ss01 by aacute.ss01.cv01;
sub aacute.ss02 by aacute.ss02.cv01;
sub abreve by abreve.cv01;
sub abreve.ss01 by abreve.ss01.cv01;
sub abreve.ss02 by abreve.ss02.cv01;
sub acaron by acaron.cv01;
sub acaron.ss01 by acaron.ss01.cv01;
sub acaron.ss02 by acaron.ss02.cv01;
sub acircumflex by acircumflex.cv01;
sub acircumflex.ss01 by acircumflex.ss01.cv01;
sub acircumflex.ss02 by acircumflex.ss02.cv01;
sub adieresis by adieresis.cv01;
sub adieresis.ss01 by adieresis.ss01.cv01;
sub adieresis.ss02 by adieresis.ss02.cv01;
sub adotaccent by adotaccent.cv01;
sub adotaccent.ss01 by adotaccent.ss01.cv01;
sub adotaccent.ss02 by adotaccent.ss02.cv01;
sub adotbelow by adotbelow.cv01;
sub adotbelow.ss01 by adotbelow.ss01.cv01;
sub adotbelow.ss02 by adotbelow.ss02.cv01;
sub agrave by agrave.cv01;
sub agrave.ss01 by agrave.ss01.cv01;
sub agrave.ss02 by agrave.ss02.cv01;
sub amacron by amacron.cv01;
sub amacron.ss01 by amacron.ss01.cv01;
sub amacron.ss02 by amacron.ss02.cv01;
sub aogonek by aogonek.cv01;
sub aogonek.ss01 by aogonek.ss01.cv01;
sub aogonek.ss02 by aogonek.ss02.cv01;
sub aring by aring.cv01;
sub aring.ss01 by aring.ss01.cv01;
sub aring.ss02 by aring.ss02.cv01;
sub aringacute by aringacute.cv01;
sub aringacute.ss01 by aringacute.ss01.cv01;
sub aringacute.ss02 by aringacute.ss02.cv01;
sub atilde by atilde.cv01;
sub atilde.ss01 by atilde.ss01.cv01;
sub atilde.ss02 by atilde.ss02.cv01;
sub a-cy by a-cy.cv01;
sub a-cy.ss01 by a-cy.ss01.cv01;
sub a-cy.ss02 by a-cy.ss02.cv01;
sub je-cy by je-cy.cv01;
sub abreve-cy by abreve-cy.cv01;
sub abreve-cy.ss01 by abreve-cy.ss01.cv01;
sub abreve-cy.ss02 by abreve-cy.ss02.cv01;
sub adieresis-cy by adieresis-cy.cv01;
sub adieresis-cy.ss01 by adieresis-cy.ss01.cv01;
sub adieresis-cy.ss02 by adieresis-cy.ss02.cv01;
sub northEastArrow by northEastArrow.cv01;

} cv01;

feature cv02 {
# automatic
sub zero by zero.cv02;
sub zero.osf by zero.osf.cv02;

} cv02;
